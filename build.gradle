apply plugin: 'java'
apply plugin: 'war'
compileJava.options.encoding = 'UTF-8'



allprojects {

    group = theProjectGroup
    version = theProjectVersion
    sourceCompatibility = theSourceCompatibility

    repositories {
        maven {
            url "${artifactoryContextUrl}/libs-snapshot"
        }
        maven {
            url "${artifactoryContextUrl}/libs-release"
        }
    }
}

buildscript {
    repositories {
        maven {
            url "${artifactoryContextUrl}/remote-repos"
        }
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1"
    }
}

dependencies {

//    compile project('auth');
    compile 'com.idehgostar:makhsan-auth:1.1-SNAPSHOT'
    compile 'com.h2database:h2:1.4.190'
    compile 'javax.servlet:javax.servlet-api:3.1.0'

    compile 'net.javacrumbs.json-unit:json-unit:1.6.1'
    compile 'com.google.code.gson:gson:2.4'
    compile 'jaxen:jaxen:1.1.6'

    compile 'org.powermock:powermock-mockito-release-full:1.6.3'
    compile 'org.mockito:mockito-all:1.10.19'
    compile(group: 'com.idehgostar', name: 'jwebcore', version: '1.2-SNAPSHOT') {
        exclude group: 'javax.servlet', module: 'servlet-api'
        exclude group: 'org.hibernate.javax.persistence', module: 'hibernate-jpa-2.0-api'
    }
    compile(group: 'org.apache.solr', name: 'solr-solrj', version: '5.3.0')
    compile(group: 'org.apache.solr', name: 'solr-core', version: '5.3.0')
    compile(group: 'com.idehgostar.libs', name: 'arabic-root-finder', version: '1.1.41-SNAPSHOT')
    compile 'com.sun.jersey:jersey-core:1.19'       //TODO: please update jersey to 2.x
    compile 'com.sun.jersey:jersey-json:1.19'
    compile 'com.sun.jersey:jersey-client:1.19'
    compile 'com.sun.jersey.contribs:jersey-spring:1.19'

//    compile 'org.codehaus.jackson:jackson-core-asl:1.9.13'      //TODO:done please update jackson to 2.x
//    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'

    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.2'
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.2'


    compile 'org.springframework:spring-context:4.2.0.RELEASE'
    compile 'org.springframework:spring-orm:4.2.0.RELEASE'
    compile 'org.springframework:spring-aspects:4.2.0.RELEASE'
    compile 'org.springframework.security:spring-security-web:4.0.2.RELEASE'
    compile 'org.springframework.security:spring-security-config:4.0.2.RELEASE'
    compile 'org.springframework.security.oauth:spring-security-oauth2:2.0.7.RELEASE'


    compile 'org.hibernate:hibernate-entitymanager:4.3.11.Final'


    compile 'mysql:mysql-connector-java:5.1.36'

    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.apache.commons:commons-collections4:4.0'
    compile 'org.apache.commons:commons-dbcp2:2.1.1'

    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.slf4j:slf4j-log4j12:1.7.12'

    testCompile 'junit:junit:4.12'
    testCompile('com.sun.jersey.jersey-test-framework:jersey-test-framework-grizzly:1.19') {
        exclude group: 'javax.servlet', module: 'servlet-api'
    }
    testCompile('com.sun.jersey.jersey-test-framework:jersey-test-framework-core:1.19') {
        exclude group: 'javax.servlet', module: 'servlet-api'
    }
    testCompile('com.sun.grizzly:grizzly-http-servlet-deployer:1.9.64') {
        exclude group: 'javax.servlet', module: 'servlet-api'
    }
    testCompile 'org.springframework:spring-test:4.2.0.RELEASE'


}

task testsJar(type: Jar, dependsOn: 'compileTestJava') {
    def testSrc = sourceSets.test.output.classesDir
    from "${testSrc}/"
    archiveName= 'tests.jar'
}

//task apiJar(type: Jar, dependsOn: 'compileJava') {
//    def mainSrc = sourceSets.main.output.classesDir
//    def mainResource = sourceSets.main.output.resourcesDir
//    from "${mainSrc}/"
//    from "${mainResource}/"
//    archiveName= "${rootProject.name}-api-${version}.jar"
//}

artifacts {
    archives(testsJar.archivePath) {
        name 'tests'
        type 'jar'
        builtBy testsJar
    }

//    archives(apiJar.archivePath) {
//        type 'jar'
//        builtBy apiJar
//    }
}

test {
    jvmArgs '-noverify'
}

/*
task dbFillJar(type: Jar, dependsOn: 'compileTestJava') {
    def testSrc = sourceSets.test.output.classesDir
    from "${testSrc}/dbfill/"
    archiveName= 'dbfiller.jar'
}

artifacts {
    archives(dbFillJar.archivePath) {
        name 'dbfiller'
        type 'jar'
        builtBy dbFillJar
    }
}
*/


task sampleTest(type: Test, dependsOn: testClasses) {
    include '**/*Search*/'
}


apply plugin: 'maven-publish'
apply plugin: "com.jfrog.artifactory"

artifactory {
    contextUrl = "${artifactoryContextUrl}"
    publish {
        repository {
            repoKey = 'libs-snapshot-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }
        defaults {
            publications('webApp')
            publications('mavenJava')
        }
    }
}


publishing {
    publications {
        webApp(MavenPublication) {
            from components.web
        }
        mavenJava(MavenPublication) {
            artifactId "${theProjectName}-api"
            from components.java
        }
    }
}

//TODO: 'out' of intellij and 'classes' of gradle and '.grad
